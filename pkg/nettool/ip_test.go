package nettool

import (
	"reflect"
	"testing"
)

func TestGetAllIPs(t *testing.T) {
	tests := []struct {
		name    string
		input   string
		want    []string
		wantErr bool
	}{
		{
			name:    "valid cidr input",
			input:   "192.168.0.0/30",
			want:    []string{"192.168.0.1/30", "192.168.0.2/30"},
			wantErr: false,
		},
		{
			name:    "invalid cidr input",
			input:   "192.168.0/30",
			want:    nil,
			wantErr: true,
		},
		{
			name:  "valid cidr input with more ips",
			input: "62.76.47.12/28",
			want: []string{"62.76.47.1/28", "62.76.47.2/28", "62.76.47.3/28", "62.76.47.4/28",
				"62.76.47.5/28", "62.76.47.6/28", "62.76.47.7/28", "62.76.47.8/28", "62.76.47.9/28",
				"62.76.47.10/28", "62.76.47.11/28", "62.76.47.12/28", "62.76.47.13/28", "62.76.47.14/28"},
			wantErr: false,
		},
		{
			name:  "valid cidr input with more and more ips",
			input: "172.18.1.0/24",
			want: []string{"172.18.1.1/24", "172.18.1.2/24", "172.18.1.3/24", "172.18.1.4/24", "172.18.1.5/24", "172.18.1.6/24", "172.18.1.7/24", "172.18.1.8/24",
				"172.18.1.9/24", "172.18.1.10/24", "172.18.1.11/24", "172.18.1.12/24", "172.18.1.13/24", "172.18.1.14/24", "172.18.1.15/24", "172.18.1.16/24",
				"172.18.1.17/24", "172.18.1.18/24", "172.18.1.19/24", "172.18.1.20/24", "172.18.1.21/24", "172.18.1.22/24", "172.18.1.23/24", "172.18.1.24/24",
				"172.18.1.25/24", "172.18.1.26/24", "172.18.1.27/24", "172.18.1.28/24", "172.18.1.29/24", "172.18.1.30/24", "172.18.1.31/24", "172.18.1.32/24",
				"172.18.1.33/24", "172.18.1.34/24", "172.18.1.35/24", "172.18.1.36/24", "172.18.1.37/24", "172.18.1.38/24", "172.18.1.39/24", "172.18.1.40/24",
				"172.18.1.41/24", "172.18.1.42/24", "172.18.1.43/24", "172.18.1.44/24", "172.18.1.45/24", "172.18.1.46/24", "172.18.1.47/24", "172.18.1.48/24",
				"172.18.1.49/24", "172.18.1.50/24", "172.18.1.51/24", "172.18.1.52/24", "172.18.1.53/24", "172.18.1.54/24", "172.18.1.55/24", "172.18.1.56/24",
				"172.18.1.57/24", "172.18.1.58/24", "172.18.1.59/24", "172.18.1.60/24", "172.18.1.61/24", "172.18.1.62/24", "172.18.1.63/24", "172.18.1.64/24",
				"172.18.1.65/24", "172.18.1.66/24", "172.18.1.67/24", "172.18.1.68/24", "172.18.1.69/24", "172.18.1.70/24", "172.18.1.71/24", "172.18.1.72/24",
				"172.18.1.73/24", "172.18.1.74/24", "172.18.1.75/24", "172.18.1.76/24", "172.18.1.77/24", "172.18.1.78/24", "172.18.1.79/24", "172.18.1.80/24",
				"172.18.1.81/24", "172.18.1.82/24", "172.18.1.83/24", "172.18.1.84/24", "172.18.1.85/24", "172.18.1.86/24", "172.18.1.87/24", "172.18.1.88/24",
				"172.18.1.89/24", "172.18.1.90/24", "172.18.1.91/24", "172.18.1.92/24", "172.18.1.93/24", "172.18.1.94/24", "172.18.1.95/24", "172.18.1.96/24",
				"172.18.1.97/24", "172.18.1.98/24", "172.18.1.99/24", "172.18.1.100/24", "172.18.1.101/24", "172.18.1.102/24", "172.18.1.103/24", "172.18.1.104/24",
				"172.18.1.105/24", "172.18.1.106/24", "172.18.1.107/24", "172.18.1.108/24", "172.18.1.109/24", "172.18.1.110/24", "172.18.1.111/24", "172.18.1.112/24",
				"172.18.1.113/24", "172.18.1.114/24", "172.18.1.115/24", "172.18.1.116/24", "172.18.1.117/24", "172.18.1.118/24", "172.18.1.119/24", "172.18.1.120/24",
				"172.18.1.121/24", "172.18.1.122/24", "172.18.1.123/24", "172.18.1.124/24", "172.18.1.125/24", "172.18.1.126/24", "172.18.1.127/24", "172.18.1.128/24",
				"172.18.1.129/24", "172.18.1.130/24", "172.18.1.131/24", "172.18.1.132/24", "172.18.1.133/24", "172.18.1.134/24", "172.18.1.135/24", "172.18.1.136/24",
				"172.18.1.137/24", "172.18.1.138/24", "172.18.1.139/24", "172.18.1.140/24", "172.18.1.141/24", "172.18.1.142/24", "172.18.1.143/24", "172.18.1.144/24",
				"172.18.1.145/24", "172.18.1.146/24", "172.18.1.147/24", "172.18.1.148/24", "172.18.1.149/24", "172.18.1.150/24", "172.18.1.151/24", "172.18.1.152/24",
				"172.18.1.153/24", "172.18.1.154/24", "172.18.1.155/24", "172.18.1.156/24", "172.18.1.157/24", "172.18.1.158/24", "172.18.1.159/24", "172.18.1.160/24",
				"172.18.1.161/24", "172.18.1.162/24", "172.18.1.163/24", "172.18.1.164/24", "172.18.1.165/24", "172.18.1.166/24", "172.18.1.167/24", "172.18.1.168/24",
				"172.18.1.169/24", "172.18.1.170/24", "172.18.1.171/24", "172.18.1.172/24", "172.18.1.173/24", "172.18.1.174/24", "172.18.1.175/24", "172.18.1.176/24",
				"172.18.1.177/24", "172.18.1.178/24", "172.18.1.179/24", "172.18.1.180/24", "172.18.1.181/24", "172.18.1.182/24", "172.18.1.183/24", "172.18.1.184/24",
				"172.18.1.185/24", "172.18.1.186/24", "172.18.1.187/24", "172.18.1.188/24", "172.18.1.189/24", "172.18.1.190/24", "172.18.1.191/24", "172.18.1.192/24",
				"172.18.1.193/24", "172.18.1.194/24", "172.18.1.195/24", "172.18.1.196/24", "172.18.1.197/24", "172.18.1.198/24", "172.18.1.199/24", "172.18.1.200/24",
				"172.18.1.201/24", "172.18.1.202/24", "172.18.1.203/24", "172.18.1.204/24", "172.18.1.205/24", "172.18.1.206/24", "172.18.1.207/24", "172.18.1.208/24",
				"172.18.1.209/24", "172.18.1.210/24", "172.18.1.211/24", "172.18.1.212/24", "172.18.1.213/24", "172.18.1.214/24", "172.18.1.215/24", "172.18.1.216/24",
				"172.18.1.217/24", "172.18.1.218/24", "172.18.1.219/24", "172.18.1.220/24", "172.18.1.221/24", "172.18.1.222/24", "172.18.1.223/24", "172.18.1.224/24",
				"172.18.1.225/24", "172.18.1.226/24", "172.18.1.227/24", "172.18.1.228/24", "172.18.1.229/24", "172.18.1.230/24", "172.18.1.231/24", "172.18.1.232/24",
				"172.18.1.233/24", "172.18.1.234/24", "172.18.1.235/24", "172.18.1.236/24", "172.18.1.237/24", "172.18.1.238/24", "172.18.1.239/24", "172.18.1.240/24",
				"172.18.1.241/24", "172.18.1.242/24", "172.18.1.243/24", "172.18.1.244/24", "172.18.1.245/24", "172.18.1.246/24", "172.18.1.247/24", "172.18.1.248/24",
				"172.18.1.249/24", "172.18.1.250/24", "172.18.1.251/24", "172.18.1.252/24", "172.18.1.253/24", "172.18.1.254/24"},
			wantErr: false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			allips, err := GetAllIPs(tt.input)
			if (err != nil) != tt.wantErr {
				t.Errorf("GetAllIPs error = %v, wantErr %v", err, tt.wantErr)
			}
			if !reflect.DeepEqual(allips, tt.want) {
				t.Errorf("wanted:\n%v\ngot:\n%v", tt.want, allips)
			}
		})
	}
}
